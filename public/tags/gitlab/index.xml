<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitLab on Howdy,Kloudy!</title>
    <link>/tags/gitlab/</link>
    <description>Recent content in GitLab on Howdy,Kloudy!</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 20 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="/tags/gitlab/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unlocking Secrets: A Guide to Integrate Azure Key Vault with GitLab</title>
      <link>/blog/unlocking-secrets-a-guide-to-azure-key-vault-integration-in-gitlab/</link>
      <pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/unlocking-secrets-a-guide-to-azure-key-vault-integration-in-gitlab/</guid>
      <description>Introduction Lately, I have experienced issues using other popular key vault providers. So, I demonstrated using the Azure key vault in Azure DevOps. A question popped up: How do we use Az key vault in GitLab?
Below links gives the direction&amp;hellip;
GitLab &amp;amp;amp; Azure Key VaultAzure AD Federated Identity CredentialIsn’t it like breathing? Nope! It is not! This blog post is to show you the easiest way!
I followed the instructions and came up with the most straightforward way</description>
    </item>
    
    <item>
      <title>Introducing the PowerShell GitLab Utility Module</title>
      <link>/blog/introducing-the-powershell-gitlab-utility-module/</link>
      <pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>/blog/introducing-the-powershell-gitlab-utility-module/</guid>
      <description>Introduction Harnessing GitLab with PowerShell: Introducing the PowerShell.GitLab.Utility Module
In the evolving landscape of DevOps and CI/CD, automating and streamlining operations is invaluable. GitLab, a web-based DevOps lifecycle tool, provides a comprehensive platform for software development, from project planning and source code management to CI/CD, monitoring, and security. To enhance the interaction with GitLab through automation, the PowerShell.GitLab.Utility modules have emerged as a significant advancement.
What is PowerShell.GitLab.Utility? PowerShell.GitLab.Utility is a PowerShell module designed to interface with GitLab.</description>
    </item>
    
    <item>
      <title>Using the GitLab GraphQL API in PowerShell</title>
      <link>/blog/using-the-gitlab-graphql-api-in-powershell/</link>
      <pubDate>Sat, 14 Oct 2023 11:20:02 +0100</pubDate>
      
      <guid>/blog/using-the-gitlab-graphql-api-in-powershell/</guid>
      <description>Introduction GraphQL is a revolutionary query language and runtime for API interactions in web development. It doesn&amp;rsquo;t just transform how we request and manage data—it reshapes the entire API landscape. In this blog post, we&amp;rsquo;ll unveil the power of GitLab GraphQL API, exploring how it offers a comprehensive and user-friendly approach to data manipulation and API evolution.
At its core, GraphQL serves as a versatile tool for querying APIs and orchestrating data retrieval.</description>
    </item>
    
    <item>
      <title>GitLab Custom SAST Analyzer for PowerShell Project</title>
      <link>/blog/gitlab-custom-sast-analyzer-for-powershell-project/</link>
      <pubDate>Thu, 14 Sep 2023 07:56:42 +0100</pubDate>
      
      <guid>/blog/gitlab-custom-sast-analyzer-for-powershell-project/</guid>
      <description>Introduction In the ever-evolving landscape of infrastructure as code, software development and cybersecurity, ensuring the robust security of your codebase has become paramount. My journey into enhancing the security posture of my PowerShell projects led me to explore the world of GitLab Custom SAST Analyzers.
As a GitLab Security Specialist, I was well-versed in the importance of securing code repositories and the pivotal role that Static Application Security Testing (SAST) plays in this endeavour.</description>
    </item>
    
  </channel>
</rss>
